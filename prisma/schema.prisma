datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model AuditLog {
  id          Int      @id @default(autoincrement())
  userId      Int?
  actionType  String
  tableName   String
  recordId    String
  changedData Json?
  timestamp   DateTime @default(now())
}

model ULB {
  id                Int                      @id @default(autoincrement())
  ulb_name          String                   @unique
  longitude         Float
  latitude          Float
  city_type         String?
  // relationship to Scheme_info
  schemes           Scheme_info[]
  // relationship to FinancialSummaryReport
  financial_reports FinancialSummaryReport[]
}

model Scheme_info {
  scheme_id                               String    @id @unique
  project_cost                            Decimal
  scheme_name                             String
  sector                                  String?
  grant_type                              String
  city_type                               String
  date_of_approval                        DateTime?
  ulb                                     String?
  created_at                              DateTime  @default(now())
  project_completion_status               String?
  tender_floated                          String?
  financial_progress                      Decimal?
  financial_progress_in_percentage        Int?
  project_completion_status_in_percentage Int?
  approved_project_cost                   Decimal?
  ulb_id                                  Int?
  ULB                                     ULB?      @relation(fields: [ulb_id], references: [id])
}

model FinancialSummaryReport {
  id       Int    @id @default(autoincrement()) // Primary key, auto-incremented
  ulb_id   Int    @unique // Foreign key referencing the ULB model, unique for each ULB
  ulb_name String // Name of the ULB, useful for display purposes

  approved_schemes                 Int // The count of schemes approved for this ULB
  fund_release_to_ulbs             Decimal // Total funds released to the ULB across all schemes
  amount                           Decimal // The total approved project cost for all schemes
  project_completed                Int // The count of completed projects for this ULB
  expenditure                      Decimal // The total expenditure for the ULB's projects
  balance_amount                   Decimal // The remaining balance amount (funds - expenditure)
  financial_progress_in_percentage Int // Average financial progress of all schemes, in percentage
  number_of_tender_floated         Int // The count of tenders floated for this ULB's schemes
  tender_not_floated               Int // The count of tenders not floated for this ULB's schemes
  work_in_progress                 Int // The count of schemes that are still in progress
  financial_year                   Int? // The financial year for which this report is generated

  fr_first_instalment  Decimal? // The first instalment of funds released to the ULB
  fr_second_instalment Decimal? // The second instalment of funds released to the ULB
  fr_interest_amount   Decimal? // Interest amount released to the ULB (if any)
  fr_grant_type        String? // Type of grant allocated to the ULB
  not_allocated_fund   Decimal? // Funds not yet allocated or distributed to the ULB

  created_at          DateTime  @default(now()) // Timestamp for when this record was created
  updated_at          DateTime? // Timestamp for the last time this record was updated
  project_not_started Int? // Count of projects that haven't started yet (financial progress = 0)

  // Foreign key relation to the ULB model
  ULB ULB @relation(fields: [ulb_id], references: [id]) // Relation to the ULB model based on ulb_id
}
